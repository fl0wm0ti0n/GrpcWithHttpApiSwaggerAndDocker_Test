syntax = "proto3";

option csharp_namespace = "GrpcClient_Test.Protos";

service Customer {
	/// <summary>
	/// Gets searched customer.
	/// </summary>
	/// <param name="userId">The unique identifier for this person.</param>
	/// <returns>A customer</returns>
	rpc GetCustomerInfo (CustomerLookupRequest) returns (CustomerGrpcModel) {
	}

	/// <summary>
	/// Gets new customers as stream.
	/// </summary>
	/// <returns>customers</returns>
	rpc GetNewCustomers (NewCustomerRequest) returns (stream CustomerGrpcModel) {
	}

	/// <summary>
	/// Gets new customers as repeated.
	/// </summary>
	/// <returns>customers</returns>
	rpc ListNewCustomers (ListCustomerRequest) returns (ListCustomerReply) {
	}

	/// <summary>
	/// create a new customer.
	/// </summary>
	/// <param name="customer">the customer Model</param>
	/// <returns>new customer</returns>
	rpc CreateCustomer (CreateCustomerRequest) returns (CustomerGrpcModel) {

	}

	/// <summary>
	/// Gets searched customer.
	/// </summary>
	/// <param name="userId">The unique identifier for this person.</param>
	/// <param name="age">The age this person.</param>
	/// <returns>A list of customers</returns>
	rpc GetCustomerNames (CustomerLookupNameRequest) returns (ListCustomerNamesReply) {
	}
}

message NewCustomerRequest {
}

message ListCustomerRequest{
}

message CustomerLookupRequest {
	int32 userId = 1;
}

message ListCustomerReply {
	repeated CustomerGrpcModel customers = 1;
}

message CustomerGrpcModel {
	string firstName = 1;
	string lastName = 2;
	string emailAddress = 3;
	bool isAlive = 4;
	int32 age = 5;
}

message CreateCustomerRequest {
	CustomerGrpcModel customer = 1;
}

message CustomerLookupNameRequest {
	int32 age = 1;
}

message ListCustomerNamesReply {
	repeated string customerNames = 1;
}